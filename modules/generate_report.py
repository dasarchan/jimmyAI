import json
from typing import Dict, Any, List
from modules.paper import Paper
from datetime import datetime
from modules.rag import write_lit_review_section

import os
import dotenv
dotenv.load_dotenv()

from llama_index.core import VectorStoreIndex, Document
from llama_index.core.query_engine import RetrieverQueryEngine
from llama_index.core.retrievers import VectorIndexRetriever

def generate_text_for_question(question: str, index: VectorStoreIndex) -> str:
    """
    Generate text content that answers the given question using information 
    from the provided papers.
    
    Args:
        question (str): The question to be addressed
        relevant_papers (List[Paper]): List of Paper objects to use as sources
        
    Returns:
        str: Generated text addressing the question
    """
    # TODO: Implement the actual text generation using AI

    # This might involve calling a language model, extracting relevant info from papers, etc.

    section = write_lit_review_section(index, question)

    return section

def process_section(section: Dict[Any, Any], index: VectorStoreIndex) -> None:
    """
    Recursively process each section in the outline, adding text content
    wherever a question field exists.
    
    Args:
        section (Dict): A section from the outline
        relevant_papers (List[Paper]): List of Paper objects to use as sources
    """
    # If the section has a question, generate text for it
    if "question" in section:
        section["text"] = generate_text_for_question(section["question"], index)
    
    # Process any subsections recursively
    if "sections" in section and isinstance(section["sections"], list):
        for subsection in section["sections"]:
            process_section(subsection, index)

def generate_full_report(outline: Dict[str, Any], index: VectorStoreIndex) -> Dict[str, Any]:
    """
    Process an outline from outline_generator and add text content for each section
    with a question.
    
    Args:
        outline (Dict): The outline generated by outline_generator
        relevant_papers (List[Paper]): List of Paper objects to use as sources
        
    Returns:
        Dict: The enhanced outline with generated text content
    """
    # Create a deep copy of the outline to avoid modifying the original
    enhanced_outline = json.loads(json.dumps(outline))
    
    # Process the top level
    if "question" in enhanced_outline:
        enhanced_outline["text"] = generate_text_for_question(
            enhanced_outline["question"], index
        )
    
    # Process each section
    if "sections" in enhanced_outline and isinstance(enhanced_outline["sections"], list):
        for section in enhanced_outline["sections"]:
            process_section(section, index)
    
    return enhanced_outline

def test_report_generation():
    """
    Test the report generation functions with a sample outline.
    """
    
    # Create sample Paper objects
    paper1 = Paper(
        id="paper1",
        title="Climate Change and Marine Life",
        authors=["Jane Smith", "John Doe"],
        abstract="Analysis of climate change impacts on marine ecosystems and biodiversity.",
        published_date=datetime.now(),
        pdf_url="https://example.com/paper1.pdf",
        entry_id="paper1",
        categories=["Climate", "Marine Biology"],
        is_relevant=True
    )
    
    paper2 = Paper(
        id="paper2",
        title="Biodiversity in a Changing World",
        authors=["Alice Johnson", "Bob Brown"],
        abstract="Study on how biodiversity is affected by global environmental changes.",
        published_date=datetime.now(),
        pdf_url="https://example.com/paper2.pdf",
        entry_id="paper2",
        categories=["Ecology", "Climate Change"],
        is_relevant=True
    )
    
    # Sample outline as would be returned from outline_generator
    sample_outline = {
        "title": "Literature Review on Climate Change Effects on Marine Biodiversity",
        "sections": [
            {
                "title": "Introduction to Climate Change and Marine Ecosystems",
                "question": "What are the fundamental relationships between climate change and marine ecosystems?",
                "sections": [
                    {
                        "title": "Current State of Research",
                        "question": "What is the current state of research on climate change impacts on marine life?"
                    }
                ]
            },
            {
                "title": "Biodiversity Changes in Marine Environments",
                "question": "How is marine biodiversity changing in response to climate variables?"
            }
        ]
    }
    
    # Generate the enhanced outline with text content
    enhanced_outline = generate_full_report(sample_outline, [paper1, paper2])
    
    # Print the result
    print(json.dumps(enhanced_outline, indent=2))

if __name__ == "__main__":
    test_report_generation()